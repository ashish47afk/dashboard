{"ast":null,"code":"import _slicedToArray from \"C:\\\\Ashish 1\\\\material-dashboard-react-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Ashish 1\\\\material-dashboard-react-master\\\\client\\\\src\\\\components\\\\Navbars\\\\AdminNavbarLinks.js\";\nimport React from \"react\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddBoxSharpIcon from '@material-ui/icons/AddBoxSharp';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\"; // @material-ui/icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\"; // core components\n\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nvar useStyles = makeStyles(styles);\nvar plus = makeStyles({\n  root: {\n    border: 0,\n    borderRadius: 3,\n    color: 'white'\n  }\n});\nexport default function AdminNavbarLinks() {\n  var classes = useStyles();\n  var dots = plus();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openNotification = _React$useState2[0],\n      setOpenNotification = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openProfile = _React$useState4[0],\n      setOpenProfile = _React$useState4[1];\n\n  var handleClickNotification = function handleClickNotification(event) {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n\n  var handleCloseNotification = function handleCloseNotification() {\n    setOpenNotification(null);\n  };\n\n  var handleClickProfile = function handleClickProfile(event) {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n\n  var handleCloseProfile = function handleCloseProfile() {\n    setOpenProfile(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plus-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddBoxSharpIcon, {\n    className: dots.root,\n    fontSize: \"large\",\n    color: \"primary\",\n    variant: \"contained\",\n    padding: \"0 30px\",\n    border: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }))\n  /*\n  <div>\n    <div className={classes.searchWrapper}>\n      <CustomInput\n        formControlProps={{\n          className: classes.margin + \" \" + classes.search\n        }}\n        inputProps={{\n          placeholder: \"Search\",\n          inputProps: {\n            \"aria-label\": \"Search\"\n          }\n        }}\n      />\n      <Button color=\"white\" aria-label=\"edit\" justIcon round>\n        <Search />\n      </Button>\n    </div>\n    <Button\n      color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n      justIcon={window.innerWidth > 959}\n      simple={!(window.innerWidth > 959)}\n      aria-label=\"Dashboard\"\n      className={classes.buttonLink}\n    >\n      <Dashboard className={classes.icons} />\n      <Hidden mdUp implementation=\"css\">\n        <p className={classes.linkText}>Dashboard</p>\n      </Hidden>\n    </Button>\n    <div className={classes.manager}>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n        aria-haspopup=\"true\"\n        onClick={handleClickNotification}\n        className={classes.buttonLink}\n      >\n        <Notifications className={classes.icons} />\n        <span className={classes.notifications}>5</span>\n        <Hidden mdUp implementation=\"css\">\n          <p onClick={handleCloseNotification} className={classes.linkText}>\n            Notification\n          </p>\n        </Hidden>\n      </Button>\n      <Poppers\n        open={Boolean(openNotification)}\n        anchorEl={openNotification}\n        transition\n        disablePortal\n        className={\n          classNames({ [classes.popperClose]: !openNotification }) +\n          \" \" +\n          classes.popperNav\n        }\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            id=\"notification-menu-list-grow\"\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\"\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleCloseNotification}>\n                <MenuList role=\"menu\">\n                  <MenuItem\n                    onClick={handleCloseNotification}\n                    className={classes.dropdownItem}\n                  >\n                    Mike John responded to your email\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleCloseNotification}\n                    className={classes.dropdownItem}\n                  >\n                    You have 5 new tasks\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleCloseNotification}\n                    className={classes.dropdownItem}\n                  >\n                    You{\"'\"}re now friend with Andrew\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleCloseNotification}\n                    className={classes.dropdownItem}\n                  >\n                    Another Notification\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleCloseNotification}\n                    className={classes.dropdownItem}\n                  >\n                    Another One\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Poppers>\n    </div>\n    <div className={classes.manager}>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n        aria-haspopup=\"true\"\n        onClick={handleClickProfile}\n        className={classes.buttonLink}\n      >\n        <Person className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Profile</p>\n        </Hidden>\n      </Button>\n      <Poppers\n        open={Boolean(openProfile)}\n        anchorEl={openProfile}\n        transition\n        disablePortal\n        className={\n          classNames({ [classes.popperClose]: !openProfile }) +\n          \" \" +\n          classes.popperNav\n        }\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            id=\"profile-menu-list-grow\"\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\"\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleCloseProfile}>\n                <MenuList role=\"menu\">\n                  <MenuItem\n                    onClick={handleCloseProfile}\n                    className={classes.dropdownItem}\n                  >\n                    Profile\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleCloseProfile}\n                    className={classes.dropdownItem}\n                  >\n                    Settings\n                  </MenuItem>\n                  <Divider light />\n                  <MenuItem\n                    onClick={handleCloseProfile}\n                    className={classes.dropdownItem}\n                  >\n                    Logout\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Poppers>\n    </div>\n  </div>*/\n  ;\n}","map":{"version":3,"sources":["C:/Ashish 1/material-dashboard-react-master/client/src/components/Navbars/AdminNavbarLinks.js"],"names":["React","classNames","makeStyles","AddBoxSharpIcon","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Poppers","Divider","Person","Notifications","Dashboard","Search","CustomInput","Button","styles","useStyles","plus","root","border","borderRadius","color","AdminNavbarLinks","classes","dots","useState","openNotification","setOpenNotification","openProfile","setOpenProfile","handleClickNotification","event","contains","target","currentTarget","handleCloseNotification","handleClickProfile","handleCloseProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddBoxSharpIcon from '@material-ui/icons/AddBoxSharp';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\nconst plus = makeStyles({\n  root: {\n    border: 0,\n    borderRadius: 3,\n    color: 'white'\n  },\n});\n\nexport default function AdminNavbarLinks() {\n  const classes = useStyles();\n  const dots = plus(); \n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = event => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n  return (\n    <div className=\"plus-icon\" >\n      <AddBoxSharpIcon className={dots.root} fontSize=\"large\"\n      color=\"primary\" variant=\"contained\" padding= '0 30px' border=\"0\"\n      />\n    </div>\n    /*\n    <div>\n      <div className={classes.searchWrapper}>\n        <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\"\n            }\n          }}\n        />\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button>\n      </div>\n      <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Dashboard</p>\n        </Hidden>\n      </Button>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>5</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Mike John responded to your email\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You have 5 new tasks\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You{\"'\"}re now friend with Andrew\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another Notification\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another One\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Profile\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Settings\n                    </MenuItem>\n                    <Divider light />\n                    <MenuItem\n                      onClick={handleCloseProfile}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>*/\n  );\n}\n"]},"metadata":{},"sourceType":"module"}